package systm_web.account;

import systm_web.*;
import java.time.*;

//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por herramienta.
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     el código se vuelve a generar. 
// </auto-generated>
//------------------------------------------------------------------------------


public class Manage extends System.Web.UI.Page
{
	private String SuccessMessage;
	protected final String getSuccessMessage()
	{
		return SuccessMessage;
	}
	private void setSuccessMessage(String value)
	{
		SuccessMessage = value;
	}

	private boolean CanRemoveExternalLogins;
	protected final boolean getCanRemoveExternalLogins()
	{
		return CanRemoveExternalLogins;
	}
	private void setCanRemoveExternalLogins(boolean value)
	{
		CanRemoveExternalLogins = value;
	}

	protected final void Page_Load()
	{
		if (!IsPostBack)
		{
			// Determinar las secciones que se van a presentar
			var hasLocalPassword = OpenAuth.HasLocalPassword(User.Identity.Name);
			setPassword.Visible = !hasLocalPassword;
			changePassword.Visible = hasLocalPassword;

			setCanRemoveExternalLogins(hasLocalPassword);

			// Presentar mensaje de operación correcta
			var message = Request.QueryString["m"];
			if (message != null)
			{
				// Seccionar la cadena de consulta desde la acción
				Form.Action = ResolveUrl("~/Account/Manage.aspx");

				setSuccessMessage(message.equals("ChangePwdSuccess") ? "Su contraseña se ha cambiado." : message.equals("SetPwdSuccess") ? "Su contraseña se ha establecido." : message.equals("RemoveLoginSuccess") ? "El inicio de sesión externo se ha quitado." : "");
				successMessage.Visible = !tangible.StringHelper.isNullOrEmpty(getSuccessMessage());
			}
		}

	}

	protected final void setPassword_Click(Object sender, tangible.EventArgs e)
	{
		if (IsValid)
		{
			var result = OpenAuth.AddLocalPassword(User.Identity.Name, password.Text);
			if (result.IsSuccessful)
			{
				Response.Redirect("~/Account/Manage.aspx?m=SetPwdSuccess");
			}
			else
			{

				ModelState.AddModelError("NewPassword", result.ErrorMessage);

			}
		}
	}


	public final java.lang.Iterable<OpenAuthAccountData> GetExternalLogins()
	{
		var accounts = OpenAuth.GetAccountsForUser(User.Identity.Name);
		setCanRemoveExternalLogins(getCanRemoveExternalLogins() || accounts.size() > 1);
		return accounts;
	}

	public final void RemoveExternalLogin(String providerName, String providerUserId)
	{
		var m = OpenAuth.DeleteAccount(User.Identity.Name, providerName, providerUserId) ? "?m=RemoveLoginSuccess" : "";
		Response.Redirect("~/Account/Manage.aspx" + m);
	}


	protected static String ConvertToDisplayDateTime(LocalDateTime utcDateTime)
	{
		// Puede cambiar este método para convertir la hora y fecha UTC con el formato y el desfase
		// deseados. En este caso, se convertirá a la zona horaria del servidor y se asignará el formato
		// de cadena de hora larga y fecha corta mediante la cultura de subproceso actual.
		return utcDateTime != null ? String.format("%1$S", utcDateTime.getValue().ToLocalTime()) : "[nunca]";
	}



	/** 
	 Control successMessage.
	 
	 
	 Campo generado automáticamente.
	 Para modificarlo, mueva la declaración del campo del archivo del diseñador al archivo de código subyacente.
	 
	*/
	protected System.Web.UI.WebControls.PlaceHolder successMessage;

	/** 
	 Control setPassword.
	 
	 
	 Campo generado automáticamente.
	 Para modificarlo, mueva la declaración del campo del archivo del diseñador al archivo de código subyacente.
	 
	*/
	protected System.Web.UI.WebControls.PlaceHolder setPassword;

	/** 
	 Control password.
	 
	 
	 Campo generado automáticamente.
	 Para modificarlo, mueva la declaración del campo del archivo del diseñador al archivo de código subyacente.
	 
	*/
	protected System.Web.UI.WebControls.TextBox password;



	/** 
	 Control confirmPassword.
	 
	 
	 Campo generado automáticamente.
	 Para modificarlo, mueva la declaración del campo del archivo del diseñador al archivo de código subyacente.
	 
	*/
	protected System.Web.UI.WebControls.TextBox confirmPassword;

	/** 
	 Control changePassword.
	 
	 
	 Campo generado automáticamente.
	 Para modificarlo, mueva la declaración del campo del archivo del diseñador al archivo de código subyacente.
	 
	*/
	protected System.Web.UI.WebControls.PlaceHolder changePassword;


}